/**
 * THIS IS AN AUTOGENERATED FILE. ALL CHANGES WILL BE LOST.
 */
import type { PropsDoc } from '@microsoft/arbutus.prop-docs-cli';

const propsDoc: PropsDoc = {
  tags: {},
  filePath: '../../components/table-list/src/table-list/table-list.tsx',
  description: '',
  displayName: 'TableList',
  methods: [],
  props: {
    className: {
      defaultValue: null,
      description: 'Consumer provided class.',
      name: 'className',
      declarations: [
        {
          fileName: 'arbutus/components/table-list/src/table-list/table-list.types.ts',
          name: 'TypeLiteral',
        },
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    variant: {
      defaultValue: {
        value: 'default',
      },
      description: 'Table style variants.',
      name: 'variant',
      declarations: [
        {
          fileName: 'arbutus/components/table-list/src/table-list/table-list.types.ts',
          name: 'TypeLiteral',
        },
      ],
      required: false,
      type: {
        name: '"default" | "alternating" | "borderless"',
      },
    },
    caption: {
      defaultValue: null,
      description: 'Table title (accessible caption).',
      name: 'caption',
      declarations: [
        {
          fileName: 'arbutus/components/table-list/src/table-list/table-list.types.ts',
          name: 'TypeLiteral',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    description: {
      defaultValue: null,
      description: 'Accessible description for the table.',
      name: 'description',
      declarations: [
        {
          fileName: 'arbutus/components/table-list/src/table-list/table-list.types.ts',
          name: 'TypeLiteral',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    columnSizing: {
      defaultValue: null,
      description:
        "Table column widths or weights. See [grid-template-columns](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-columns)\nspecification.\n@example [1, 1, 2, 1]\n@example ['230px', auto, auto, auto]",
      name: 'columnSizing',
      declarations: [
        {
          fileName: 'arbutus/components/table-list/src/table-list/table-list.types.ts',
          name: 'TypeLiteral',
        },
      ],
      required: false,
      type: {
        name: '(string | number)[]',
      },
    },
    align: {
      defaultValue: null,
      description: '',
      name: 'align',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'TableHTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'TableHTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: '"left" | "center" | "right"',
      },
    },
    bgcolor: {
      defaultValue: null,
      description: '',
      name: 'bgcolor',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'TableHTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'TableHTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    border: {
      defaultValue: null,
      description: '',
      name: 'border',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'TableHTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'TableHTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'number',
      },
    },
    cellPadding: {
      defaultValue: null,
      description: '',
      name: 'cellPadding',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'TableHTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'TableHTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string | number',
      },
    },
    cellSpacing: {
      defaultValue: null,
      description: '',
      name: 'cellSpacing',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'TableHTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'TableHTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string | number',
      },
    },
    frame: {
      defaultValue: null,
      description: '',
      name: 'frame',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'TableHTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'TableHTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'boolean',
      },
    },
    rules: {
      defaultValue: null,
      description: '',
      name: 'rules',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'TableHTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'TableHTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: '"none" | "groups" | "rows" | "columns" | "all"',
      },
    },
    summary: {
      defaultValue: null,
      description: '',
      name: 'summary',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'TableHTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'TableHTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    width: {
      defaultValue: null,
      description: '',
      name: 'width',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'TableHTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'TableHTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string | number',
      },
    },
    defaultChecked: {
      defaultValue: null,
      description: '',
      name: 'defaultChecked',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'boolean',
      },
    },
    defaultValue: {
      defaultValue: null,
      description: '',
      name: 'defaultValue',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string | number | readonly string[]',
      },
    },
    suppressContentEditableWarning: {
      defaultValue: null,
      description: '',
      name: 'suppressContentEditableWarning',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'boolean',
      },
    },
    suppressHydrationWarning: {
      defaultValue: null,
      description: '',
      name: 'suppressHydrationWarning',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'boolean',
      },
    },
    accessKey: {
      defaultValue: null,
      description: '',
      name: 'accessKey',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    autoFocus: {
      defaultValue: null,
      description: '',
      name: 'autoFocus',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'boolean',
      },
    },
    contentEditable: {
      defaultValue: null,
      description: '',
      name: 'contentEditable',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'Booleanish | "inherit" | "plaintext-only"',
      },
    },
    contextMenu: {
      defaultValue: null,
      description: '',
      name: 'contextMenu',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    dir: {
      defaultValue: null,
      description: '',
      name: 'dir',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    draggable: {
      defaultValue: null,
      description: '',
      name: 'draggable',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'Booleanish',
      },
    },
    hidden: {
      defaultValue: null,
      description: '',
      name: 'hidden',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'boolean',
      },
    },
    id: {
      defaultValue: null,
      description: '',
      name: 'id',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    lang: {
      defaultValue: null,
      description: '',
      name: 'lang',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    nonce: {
      defaultValue: null,
      description: '',
      name: 'nonce',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    placeholder: {
      defaultValue: null,
      description: '',
      name: 'placeholder',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    slot: {
      defaultValue: null,
      description: '',
      name: 'slot',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    spellCheck: {
      defaultValue: null,
      description: '',
      name: 'spellCheck',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'Booleanish',
      },
    },
    style: {
      defaultValue: null,
      description: '',
      name: 'style',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'CSSProperties',
      },
    },
    tabIndex: {
      defaultValue: null,
      description: '',
      name: 'tabIndex',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'number',
      },
    },
    title: {
      defaultValue: null,
      description: '',
      name: 'title',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    translate: {
      defaultValue: null,
      description: '',
      name: 'translate',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: '"yes" | "no"',
      },
    },
    radioGroup: {
      defaultValue: null,
      description: '',
      name: 'radioGroup',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    role: {
      defaultValue: null,
      description: '',
      name: 'role',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'AriaRole',
      },
    },
    about: {
      defaultValue: null,
      description: '',
      name: 'about',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    content: {
      defaultValue: null,
      description: '',
      name: 'content',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    datatype: {
      defaultValue: null,
      description: '',
      name: 'datatype',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    inlist: {
      defaultValue: null,
      description: '',
      name: 'inlist',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'any',
      },
    },
    prefix: {
      defaultValue: null,
      description: '',
      name: 'prefix',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    property: {
      defaultValue: null,
      description: '',
      name: 'property',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    rel: {
      defaultValue: null,
      description: '',
      name: 'rel',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    resource: {
      defaultValue: null,
      description: '',
      name: 'resource',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    rev: {
      defaultValue: null,
      description: '',
      name: 'rev',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    typeof: {
      defaultValue: null,
      description: '',
      name: 'typeof',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    vocab: {
      defaultValue: null,
      description: '',
      name: 'vocab',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    autoCapitalize: {
      defaultValue: null,
      description: '',
      name: 'autoCapitalize',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    autoCorrect: {
      defaultValue: null,
      description: '',
      name: 'autoCorrect',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    autoSave: {
      defaultValue: null,
      description: '',
      name: 'autoSave',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    color: {
      defaultValue: null,
      description: '',
      name: 'color',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    itemProp: {
      defaultValue: null,
      description: '',
      name: 'itemProp',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    itemScope: {
      defaultValue: null,
      description: '',
      name: 'itemScope',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'boolean',
      },
    },
    itemType: {
      defaultValue: null,
      description: '',
      name: 'itemType',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    itemID: {
      defaultValue: null,
      description: '',
      name: 'itemID',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    itemRef: {
      defaultValue: null,
      description: '',
      name: 'itemRef',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    results: {
      defaultValue: null,
      description: '',
      name: 'results',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'number',
      },
    },
    security: {
      defaultValue: null,
      description: '',
      name: 'security',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    unselectable: {
      defaultValue: null,
      description: '',
      name: 'unselectable',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: '"on" | "off"',
      },
    },
    inputMode: {
      defaultValue: null,
      description:
        'Hints at the type of data that might be entered by the user while editing the element or its contents\n@see https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute',
      name: 'inputMode',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: '"none" | "search" | "text" | "tel" | "url" | "email" | "numeric" | "decimal"',
      },
    },
    is: {
      defaultValue: null,
      description:
        'Specify that a standard HTML element should behave like a defined custom built-in element\n@see https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is',
      name: 'is',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'HTMLAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'HTMLAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    'aria-activedescendant': {
      defaultValue: null,
      description:
        'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
      name: 'aria-activedescendant',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    'aria-atomic': {
      defaultValue: null,
      description:
        'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
      name: 'aria-atomic',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'Booleanish',
      },
    },
    'aria-autocomplete': {
      defaultValue: null,
      description:
        "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
      name: 'aria-autocomplete',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: '"none" | "list" | "inline" | "both"',
      },
    },
    'aria-braillelabel': {
      defaultValue: null,
      description:
        'Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.',
      name: 'aria-braillelabel',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    'aria-brailleroledescription': {
      defaultValue: null,
      description:
        'Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.',
      name: 'aria-brailleroledescription',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    'aria-busy': {
      defaultValue: null,
      description: '',
      name: 'aria-busy',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'Booleanish',
      },
    },
    'aria-checked': {
      defaultValue: null,
      description:
        'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
      name: 'aria-checked',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'boolean | "true" | "false" | "mixed"',
      },
    },
    'aria-colcount': {
      defaultValue: null,
      description:
        'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
      name: 'aria-colcount',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'number',
      },
    },
    'aria-colindex': {
      defaultValue: null,
      description:
        "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
      name: 'aria-colindex',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'number',
      },
    },
    'aria-colindextext': {
      defaultValue: null,
      description:
        'Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.',
      name: 'aria-colindextext',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    'aria-colspan': {
      defaultValue: null,
      description:
        'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
      name: 'aria-colspan',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'number',
      },
    },
    'aria-controls': {
      defaultValue: null,
      description:
        'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
      name: 'aria-controls',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    'aria-current': {
      defaultValue: null,
      description:
        'Indicates the element that represents the current item within a container or set of related elements.',
      name: 'aria-current',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'boolean | "true" | "false" | "page" | "step" | "location" | "date" | "time"',
      },
    },
    'aria-describedby': {
      defaultValue: null,
      description:
        'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
      name: 'aria-describedby',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    'aria-description': {
      defaultValue: null,
      description:
        'Defines a string value that describes or annotates the current element.\n@see related aria-describedby.',
      name: 'aria-description',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    'aria-details': {
      defaultValue: null,
      description:
        'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
      name: 'aria-details',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    'aria-disabled': {
      defaultValue: null,
      description:
        'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
      name: 'aria-disabled',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'Booleanish',
      },
    },
    'aria-dropeffect': {
      defaultValue: null,
      description:
        'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
      name: 'aria-dropeffect',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: '"none" | "link" | "copy" | "execute" | "move" | "popup"',
      },
    },
    'aria-errormessage': {
      defaultValue: null,
      description:
        'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
      name: 'aria-errormessage',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    'aria-expanded': {
      defaultValue: null,
      description:
        'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
      name: 'aria-expanded',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'Booleanish',
      },
    },
    'aria-flowto': {
      defaultValue: null,
      description:
        "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
      name: 'aria-flowto',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    'aria-grabbed': {
      defaultValue: null,
      description:
        'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
      name: 'aria-grabbed',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'Booleanish',
      },
    },
    'aria-haspopup': {
      defaultValue: null,
      description:
        'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
      name: 'aria-haspopup',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'boolean | "true" | "false" | "dialog" | "grid" | "listbox" | "menu" | "tree"',
      },
    },
    'aria-hidden': {
      defaultValue: null,
      description:
        'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
      name: 'aria-hidden',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'Booleanish',
      },
    },
    'aria-invalid': {
      defaultValue: null,
      description:
        'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
      name: 'aria-invalid',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'boolean | "true" | "false" | "grammar" | "spelling"',
      },
    },
    'aria-keyshortcuts': {
      defaultValue: null,
      description:
        'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
      name: 'aria-keyshortcuts',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    'aria-label': {
      defaultValue: null,
      description:
        'Defines a string value that labels the current element.\n@see aria-labelledby.',
      name: 'aria-label',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    'aria-labelledby': {
      defaultValue: null,
      description:
        'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
      name: 'aria-labelledby',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    'aria-level': {
      defaultValue: null,
      description: 'Defines the hierarchical level of an element within a structure.',
      name: 'aria-level',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'number',
      },
    },
    'aria-live': {
      defaultValue: null,
      description:
        'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
      name: 'aria-live',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: '"off" | "assertive" | "polite"',
      },
    },
    'aria-modal': {
      defaultValue: null,
      description: 'Indicates whether an element is modal when displayed.',
      name: 'aria-modal',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'Booleanish',
      },
    },
    'aria-multiline': {
      defaultValue: null,
      description:
        'Indicates whether a text box accepts multiple lines of input or only a single line.',
      name: 'aria-multiline',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'Booleanish',
      },
    },
    'aria-multiselectable': {
      defaultValue: null,
      description:
        'Indicates that the user may select more than one item from the current selectable descendants.',
      name: 'aria-multiselectable',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'Booleanish',
      },
    },
    'aria-orientation': {
      defaultValue: null,
      description:
        "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      name: 'aria-orientation',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: '"horizontal" | "vertical"',
      },
    },
    'aria-owns': {
      defaultValue: null,
      description:
        'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
      name: 'aria-owns',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    'aria-placeholder': {
      defaultValue: null,
      description:
        'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
      name: 'aria-placeholder',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    'aria-posinset': {
      defaultValue: null,
      description:
        "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
      name: 'aria-posinset',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'number',
      },
    },
    'aria-pressed': {
      defaultValue: null,
      description:
        'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
      name: 'aria-pressed',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'boolean | "true" | "false" | "mixed"',
      },
    },
    'aria-readonly': {
      defaultValue: null,
      description:
        'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
      name: 'aria-readonly',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'Booleanish',
      },
    },
    'aria-relevant': {
      defaultValue: null,
      description:
        'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
      name: 'aria-relevant',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: '"all" | "text" | "additions" | "additions removals" | "additions text" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"',
      },
    },
    'aria-required': {
      defaultValue: null,
      description:
        'Indicates that user input is required on the element before a form may be submitted.',
      name: 'aria-required',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'Booleanish',
      },
    },
    'aria-roledescription': {
      defaultValue: null,
      description:
        'Defines a human-readable, author-localized description for the role of an element.',
      name: 'aria-roledescription',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    'aria-rowcount': {
      defaultValue: null,
      description:
        'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
      name: 'aria-rowcount',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'number',
      },
    },
    'aria-rowindex': {
      defaultValue: null,
      description:
        "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
      name: 'aria-rowindex',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'number',
      },
    },
    'aria-rowindextext': {
      defaultValue: null,
      description:
        'Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.',
      name: 'aria-rowindextext',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    'aria-rowspan': {
      defaultValue: null,
      description:
        'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
      name: 'aria-rowspan',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'number',
      },
    },
    'aria-selected': {
      defaultValue: null,
      description:
        'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
      name: 'aria-selected',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'Booleanish',
      },
    },
    'aria-setsize': {
      defaultValue: null,
      description:
        'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
      name: 'aria-setsize',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'number',
      },
    },
    'aria-sort': {
      defaultValue: null,
      description:
        'Indicates if items in a table or grid are sorted in ascending or descending order.',
      name: 'aria-sort',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: '"none" | "ascending" | "descending" | "other"',
      },
    },
    'aria-valuemax': {
      defaultValue: null,
      description: 'Defines the maximum allowed value for a range widget.',
      name: 'aria-valuemax',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'number',
      },
    },
    'aria-valuemin': {
      defaultValue: null,
      description: 'Defines the minimum allowed value for a range widget.',
      name: 'aria-valuemin',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'number',
      },
    },
    'aria-valuenow': {
      defaultValue: null,
      description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
      name: 'aria-valuenow',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'number',
      },
    },
    'aria-valuetext': {
      defaultValue: null,
      description:
        'Defines the human readable text alternative of aria-valuenow for a range widget.',
      name: 'aria-valuetext',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'AriaAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'AriaAttributes',
        },
      ],
      required: false,
      type: {
        name: 'string',
      },
    },
    dangerouslySetInnerHTML: {
      defaultValue: null,
      description: '',
      name: 'dangerouslySetInnerHTML',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: '{ __html: string | TrustedHTML; }',
      },
    },
    onCopy: {
      defaultValue: null,
      description: '',
      name: 'onCopy',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ClipboardEventHandler<HTMLTableElement>',
      },
    },
    onCopyCapture: {
      defaultValue: null,
      description: '',
      name: 'onCopyCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ClipboardEventHandler<HTMLTableElement>',
      },
    },
    onCut: {
      defaultValue: null,
      description: '',
      name: 'onCut',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ClipboardEventHandler<HTMLTableElement>',
      },
    },
    onCutCapture: {
      defaultValue: null,
      description: '',
      name: 'onCutCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ClipboardEventHandler<HTMLTableElement>',
      },
    },
    onPaste: {
      defaultValue: null,
      description: '',
      name: 'onPaste',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ClipboardEventHandler<HTMLTableElement>',
      },
    },
    onPasteCapture: {
      defaultValue: null,
      description: '',
      name: 'onPasteCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ClipboardEventHandler<HTMLTableElement>',
      },
    },
    onCompositionEnd: {
      defaultValue: null,
      description: '',
      name: 'onCompositionEnd',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'CompositionEventHandler<HTMLTableElement>',
      },
    },
    onCompositionEndCapture: {
      defaultValue: null,
      description: '',
      name: 'onCompositionEndCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'CompositionEventHandler<HTMLTableElement>',
      },
    },
    onCompositionStart: {
      defaultValue: null,
      description: '',
      name: 'onCompositionStart',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'CompositionEventHandler<HTMLTableElement>',
      },
    },
    onCompositionStartCapture: {
      defaultValue: null,
      description: '',
      name: 'onCompositionStartCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'CompositionEventHandler<HTMLTableElement>',
      },
    },
    onCompositionUpdate: {
      defaultValue: null,
      description: '',
      name: 'onCompositionUpdate',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'CompositionEventHandler<HTMLTableElement>',
      },
    },
    onCompositionUpdateCapture: {
      defaultValue: null,
      description: '',
      name: 'onCompositionUpdateCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'CompositionEventHandler<HTMLTableElement>',
      },
    },
    onFocus: {
      defaultValue: null,
      description: '',
      name: 'onFocus',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'FocusEventHandler<HTMLTableElement>',
      },
    },
    onFocusCapture: {
      defaultValue: null,
      description: '',
      name: 'onFocusCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'FocusEventHandler<HTMLTableElement>',
      },
    },
    onBlur: {
      defaultValue: null,
      description: '',
      name: 'onBlur',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'FocusEventHandler<HTMLTableElement>',
      },
    },
    onBlurCapture: {
      defaultValue: null,
      description: '',
      name: 'onBlurCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'FocusEventHandler<HTMLTableElement>',
      },
    },
    onChange: {
      defaultValue: null,
      description: '',
      name: 'onChange',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'FormEventHandler<HTMLTableElement>',
      },
    },
    onChangeCapture: {
      defaultValue: null,
      description: '',
      name: 'onChangeCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'FormEventHandler<HTMLTableElement>',
      },
    },
    onBeforeInput: {
      defaultValue: null,
      description: '',
      name: 'onBeforeInput',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'FormEventHandler<HTMLTableElement>',
      },
    },
    onBeforeInputCapture: {
      defaultValue: null,
      description: '',
      name: 'onBeforeInputCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'FormEventHandler<HTMLTableElement>',
      },
    },
    onInput: {
      defaultValue: null,
      description: '',
      name: 'onInput',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'FormEventHandler<HTMLTableElement>',
      },
    },
    onInputCapture: {
      defaultValue: null,
      description: '',
      name: 'onInputCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'FormEventHandler<HTMLTableElement>',
      },
    },
    onReset: {
      defaultValue: null,
      description: '',
      name: 'onReset',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'FormEventHandler<HTMLTableElement>',
      },
    },
    onResetCapture: {
      defaultValue: null,
      description: '',
      name: 'onResetCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'FormEventHandler<HTMLTableElement>',
      },
    },
    onSubmit: {
      defaultValue: null,
      description: '',
      name: 'onSubmit',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'FormEventHandler<HTMLTableElement>',
      },
    },
    onSubmitCapture: {
      defaultValue: null,
      description: '',
      name: 'onSubmitCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'FormEventHandler<HTMLTableElement>',
      },
    },
    onInvalid: {
      defaultValue: null,
      description: '',
      name: 'onInvalid',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'FormEventHandler<HTMLTableElement>',
      },
    },
    onInvalidCapture: {
      defaultValue: null,
      description: '',
      name: 'onInvalidCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'FormEventHandler<HTMLTableElement>',
      },
    },
    onLoad: {
      defaultValue: null,
      description: '',
      name: 'onLoad',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onLoadCapture: {
      defaultValue: null,
      description: '',
      name: 'onLoadCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onError: {
      defaultValue: null,
      description: '',
      name: 'onError',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onErrorCapture: {
      defaultValue: null,
      description: '',
      name: 'onErrorCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onKeyDown: {
      defaultValue: null,
      description: '',
      name: 'onKeyDown',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'KeyboardEventHandler<HTMLTableElement>',
      },
    },
    onKeyDownCapture: {
      defaultValue: null,
      description: '',
      name: 'onKeyDownCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'KeyboardEventHandler<HTMLTableElement>',
      },
    },
    onKeyPress: {
      defaultValue: null,
      description: '@deprecated',
      name: 'onKeyPress',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'KeyboardEventHandler<HTMLTableElement>',
      },
    },
    onKeyPressCapture: {
      defaultValue: null,
      description: '@deprecated',
      name: 'onKeyPressCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'KeyboardEventHandler<HTMLTableElement>',
      },
    },
    onKeyUp: {
      defaultValue: null,
      description: '',
      name: 'onKeyUp',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'KeyboardEventHandler<HTMLTableElement>',
      },
    },
    onKeyUpCapture: {
      defaultValue: null,
      description: '',
      name: 'onKeyUpCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'KeyboardEventHandler<HTMLTableElement>',
      },
    },
    onAbort: {
      defaultValue: null,
      description: '',
      name: 'onAbort',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onAbortCapture: {
      defaultValue: null,
      description: '',
      name: 'onAbortCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onCanPlay: {
      defaultValue: null,
      description: '',
      name: 'onCanPlay',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onCanPlayCapture: {
      defaultValue: null,
      description: '',
      name: 'onCanPlayCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onCanPlayThrough: {
      defaultValue: null,
      description: '',
      name: 'onCanPlayThrough',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onCanPlayThroughCapture: {
      defaultValue: null,
      description: '',
      name: 'onCanPlayThroughCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onDurationChange: {
      defaultValue: null,
      description: '',
      name: 'onDurationChange',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onDurationChangeCapture: {
      defaultValue: null,
      description: '',
      name: 'onDurationChangeCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onEmptied: {
      defaultValue: null,
      description: '',
      name: 'onEmptied',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onEmptiedCapture: {
      defaultValue: null,
      description: '',
      name: 'onEmptiedCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onEncrypted: {
      defaultValue: null,
      description: '',
      name: 'onEncrypted',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onEncryptedCapture: {
      defaultValue: null,
      description: '',
      name: 'onEncryptedCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onEnded: {
      defaultValue: null,
      description: '',
      name: 'onEnded',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onEndedCapture: {
      defaultValue: null,
      description: '',
      name: 'onEndedCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onLoadedData: {
      defaultValue: null,
      description: '',
      name: 'onLoadedData',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onLoadedDataCapture: {
      defaultValue: null,
      description: '',
      name: 'onLoadedDataCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onLoadedMetadata: {
      defaultValue: null,
      description: '',
      name: 'onLoadedMetadata',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onLoadedMetadataCapture: {
      defaultValue: null,
      description: '',
      name: 'onLoadedMetadataCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onLoadStart: {
      defaultValue: null,
      description: '',
      name: 'onLoadStart',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onLoadStartCapture: {
      defaultValue: null,
      description: '',
      name: 'onLoadStartCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onPause: {
      defaultValue: null,
      description: '',
      name: 'onPause',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onPauseCapture: {
      defaultValue: null,
      description: '',
      name: 'onPauseCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onPlay: {
      defaultValue: null,
      description: '',
      name: 'onPlay',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onPlayCapture: {
      defaultValue: null,
      description: '',
      name: 'onPlayCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onPlaying: {
      defaultValue: null,
      description: '',
      name: 'onPlaying',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onPlayingCapture: {
      defaultValue: null,
      description: '',
      name: 'onPlayingCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onProgress: {
      defaultValue: null,
      description: '',
      name: 'onProgress',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onProgressCapture: {
      defaultValue: null,
      description: '',
      name: 'onProgressCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onRateChange: {
      defaultValue: null,
      description: '',
      name: 'onRateChange',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onRateChangeCapture: {
      defaultValue: null,
      description: '',
      name: 'onRateChangeCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onResize: {
      defaultValue: null,
      description: '',
      name: 'onResize',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onResizeCapture: {
      defaultValue: null,
      description: '',
      name: 'onResizeCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onSeeked: {
      defaultValue: null,
      description: '',
      name: 'onSeeked',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onSeekedCapture: {
      defaultValue: null,
      description: '',
      name: 'onSeekedCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onSeeking: {
      defaultValue: null,
      description: '',
      name: 'onSeeking',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onSeekingCapture: {
      defaultValue: null,
      description: '',
      name: 'onSeekingCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onStalled: {
      defaultValue: null,
      description: '',
      name: 'onStalled',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onStalledCapture: {
      defaultValue: null,
      description: '',
      name: 'onStalledCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onSuspend: {
      defaultValue: null,
      description: '',
      name: 'onSuspend',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onSuspendCapture: {
      defaultValue: null,
      description: '',
      name: 'onSuspendCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onTimeUpdate: {
      defaultValue: null,
      description: '',
      name: 'onTimeUpdate',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onTimeUpdateCapture: {
      defaultValue: null,
      description: '',
      name: 'onTimeUpdateCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onVolumeChange: {
      defaultValue: null,
      description: '',
      name: 'onVolumeChange',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onVolumeChangeCapture: {
      defaultValue: null,
      description: '',
      name: 'onVolumeChangeCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onWaiting: {
      defaultValue: null,
      description: '',
      name: 'onWaiting',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onWaitingCapture: {
      defaultValue: null,
      description: '',
      name: 'onWaitingCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onAuxClick: {
      defaultValue: null,
      description: '',
      name: 'onAuxClick',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'MouseEventHandler<HTMLTableElement>',
      },
    },
    onAuxClickCapture: {
      defaultValue: null,
      description: '',
      name: 'onAuxClickCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'MouseEventHandler<HTMLTableElement>',
      },
    },
    onClick: {
      defaultValue: null,
      description: '',
      name: 'onClick',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'MouseEventHandler<HTMLTableElement>',
      },
    },
    onClickCapture: {
      defaultValue: null,
      description: '',
      name: 'onClickCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'MouseEventHandler<HTMLTableElement>',
      },
    },
    onContextMenu: {
      defaultValue: null,
      description: '',
      name: 'onContextMenu',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'MouseEventHandler<HTMLTableElement>',
      },
    },
    onContextMenuCapture: {
      defaultValue: null,
      description: '',
      name: 'onContextMenuCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'MouseEventHandler<HTMLTableElement>',
      },
    },
    onDoubleClick: {
      defaultValue: null,
      description: '',
      name: 'onDoubleClick',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'MouseEventHandler<HTMLTableElement>',
      },
    },
    onDoubleClickCapture: {
      defaultValue: null,
      description: '',
      name: 'onDoubleClickCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'MouseEventHandler<HTMLTableElement>',
      },
    },
    onDrag: {
      defaultValue: null,
      description: '',
      name: 'onDrag',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'DragEventHandler<HTMLTableElement>',
      },
    },
    onDragCapture: {
      defaultValue: null,
      description: '',
      name: 'onDragCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'DragEventHandler<HTMLTableElement>',
      },
    },
    onDragEnd: {
      defaultValue: null,
      description: '',
      name: 'onDragEnd',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'DragEventHandler<HTMLTableElement>',
      },
    },
    onDragEndCapture: {
      defaultValue: null,
      description: '',
      name: 'onDragEndCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'DragEventHandler<HTMLTableElement>',
      },
    },
    onDragEnter: {
      defaultValue: null,
      description: '',
      name: 'onDragEnter',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'DragEventHandler<HTMLTableElement>',
      },
    },
    onDragEnterCapture: {
      defaultValue: null,
      description: '',
      name: 'onDragEnterCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'DragEventHandler<HTMLTableElement>',
      },
    },
    onDragExit: {
      defaultValue: null,
      description: '',
      name: 'onDragExit',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'DragEventHandler<HTMLTableElement>',
      },
    },
    onDragExitCapture: {
      defaultValue: null,
      description: '',
      name: 'onDragExitCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'DragEventHandler<HTMLTableElement>',
      },
    },
    onDragLeave: {
      defaultValue: null,
      description: '',
      name: 'onDragLeave',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'DragEventHandler<HTMLTableElement>',
      },
    },
    onDragLeaveCapture: {
      defaultValue: null,
      description: '',
      name: 'onDragLeaveCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'DragEventHandler<HTMLTableElement>',
      },
    },
    onDragOver: {
      defaultValue: null,
      description: '',
      name: 'onDragOver',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'DragEventHandler<HTMLTableElement>',
      },
    },
    onDragOverCapture: {
      defaultValue: null,
      description: '',
      name: 'onDragOverCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'DragEventHandler<HTMLTableElement>',
      },
    },
    onDragStart: {
      defaultValue: null,
      description: '',
      name: 'onDragStart',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'DragEventHandler<HTMLTableElement>',
      },
    },
    onDragStartCapture: {
      defaultValue: null,
      description: '',
      name: 'onDragStartCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'DragEventHandler<HTMLTableElement>',
      },
    },
    onDrop: {
      defaultValue: null,
      description: '',
      name: 'onDrop',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'DragEventHandler<HTMLTableElement>',
      },
    },
    onDropCapture: {
      defaultValue: null,
      description: '',
      name: 'onDropCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'DragEventHandler<HTMLTableElement>',
      },
    },
    onMouseDown: {
      defaultValue: null,
      description: '',
      name: 'onMouseDown',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'MouseEventHandler<HTMLTableElement>',
      },
    },
    onMouseDownCapture: {
      defaultValue: null,
      description: '',
      name: 'onMouseDownCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'MouseEventHandler<HTMLTableElement>',
      },
    },
    onMouseEnter: {
      defaultValue: null,
      description: '',
      name: 'onMouseEnter',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'MouseEventHandler<HTMLTableElement>',
      },
    },
    onMouseLeave: {
      defaultValue: null,
      description: '',
      name: 'onMouseLeave',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'MouseEventHandler<HTMLTableElement>',
      },
    },
    onMouseMove: {
      defaultValue: null,
      description: '',
      name: 'onMouseMove',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'MouseEventHandler<HTMLTableElement>',
      },
    },
    onMouseMoveCapture: {
      defaultValue: null,
      description: '',
      name: 'onMouseMoveCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'MouseEventHandler<HTMLTableElement>',
      },
    },
    onMouseOut: {
      defaultValue: null,
      description: '',
      name: 'onMouseOut',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'MouseEventHandler<HTMLTableElement>',
      },
    },
    onMouseOutCapture: {
      defaultValue: null,
      description: '',
      name: 'onMouseOutCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'MouseEventHandler<HTMLTableElement>',
      },
    },
    onMouseOver: {
      defaultValue: null,
      description: '',
      name: 'onMouseOver',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'MouseEventHandler<HTMLTableElement>',
      },
    },
    onMouseOverCapture: {
      defaultValue: null,
      description: '',
      name: 'onMouseOverCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'MouseEventHandler<HTMLTableElement>',
      },
    },
    onMouseUp: {
      defaultValue: null,
      description: '',
      name: 'onMouseUp',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'MouseEventHandler<HTMLTableElement>',
      },
    },
    onMouseUpCapture: {
      defaultValue: null,
      description: '',
      name: 'onMouseUpCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'MouseEventHandler<HTMLTableElement>',
      },
    },
    onSelect: {
      defaultValue: null,
      description: '',
      name: 'onSelect',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onSelectCapture: {
      defaultValue: null,
      description: '',
      name: 'onSelectCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'ReactEventHandler<HTMLTableElement>',
      },
    },
    onTouchCancel: {
      defaultValue: null,
      description: '',
      name: 'onTouchCancel',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'TouchEventHandler<HTMLTableElement>',
      },
    },
    onTouchCancelCapture: {
      defaultValue: null,
      description: '',
      name: 'onTouchCancelCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'TouchEventHandler<HTMLTableElement>',
      },
    },
    onTouchEnd: {
      defaultValue: null,
      description: '',
      name: 'onTouchEnd',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'TouchEventHandler<HTMLTableElement>',
      },
    },
    onTouchEndCapture: {
      defaultValue: null,
      description: '',
      name: 'onTouchEndCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'TouchEventHandler<HTMLTableElement>',
      },
    },
    onTouchMove: {
      defaultValue: null,
      description: '',
      name: 'onTouchMove',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'TouchEventHandler<HTMLTableElement>',
      },
    },
    onTouchMoveCapture: {
      defaultValue: null,
      description: '',
      name: 'onTouchMoveCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'TouchEventHandler<HTMLTableElement>',
      },
    },
    onTouchStart: {
      defaultValue: null,
      description: '',
      name: 'onTouchStart',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'TouchEventHandler<HTMLTableElement>',
      },
    },
    onTouchStartCapture: {
      defaultValue: null,
      description: '',
      name: 'onTouchStartCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'TouchEventHandler<HTMLTableElement>',
      },
    },
    onPointerDown: {
      defaultValue: null,
      description: '',
      name: 'onPointerDown',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'PointerEventHandler<HTMLTableElement>',
      },
    },
    onPointerDownCapture: {
      defaultValue: null,
      description: '',
      name: 'onPointerDownCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'PointerEventHandler<HTMLTableElement>',
      },
    },
    onPointerMove: {
      defaultValue: null,
      description: '',
      name: 'onPointerMove',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'PointerEventHandler<HTMLTableElement>',
      },
    },
    onPointerMoveCapture: {
      defaultValue: null,
      description: '',
      name: 'onPointerMoveCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'PointerEventHandler<HTMLTableElement>',
      },
    },
    onPointerUp: {
      defaultValue: null,
      description: '',
      name: 'onPointerUp',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'PointerEventHandler<HTMLTableElement>',
      },
    },
    onPointerUpCapture: {
      defaultValue: null,
      description: '',
      name: 'onPointerUpCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'PointerEventHandler<HTMLTableElement>',
      },
    },
    onPointerCancel: {
      defaultValue: null,
      description: '',
      name: 'onPointerCancel',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'PointerEventHandler<HTMLTableElement>',
      },
    },
    onPointerCancelCapture: {
      defaultValue: null,
      description: '',
      name: 'onPointerCancelCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'PointerEventHandler<HTMLTableElement>',
      },
    },
    onPointerEnter: {
      defaultValue: null,
      description: '',
      name: 'onPointerEnter',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'PointerEventHandler<HTMLTableElement>',
      },
    },
    onPointerEnterCapture: {
      defaultValue: null,
      description: '',
      name: 'onPointerEnterCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'PointerEventHandler<HTMLTableElement>',
      },
    },
    onPointerLeave: {
      defaultValue: null,
      description: '',
      name: 'onPointerLeave',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'PointerEventHandler<HTMLTableElement>',
      },
    },
    onPointerLeaveCapture: {
      defaultValue: null,
      description: '',
      name: 'onPointerLeaveCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'PointerEventHandler<HTMLTableElement>',
      },
    },
    onPointerOver: {
      defaultValue: null,
      description: '',
      name: 'onPointerOver',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'PointerEventHandler<HTMLTableElement>',
      },
    },
    onPointerOverCapture: {
      defaultValue: null,
      description: '',
      name: 'onPointerOverCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'PointerEventHandler<HTMLTableElement>',
      },
    },
    onPointerOut: {
      defaultValue: null,
      description: '',
      name: 'onPointerOut',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'PointerEventHandler<HTMLTableElement>',
      },
    },
    onPointerOutCapture: {
      defaultValue: null,
      description: '',
      name: 'onPointerOutCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'PointerEventHandler<HTMLTableElement>',
      },
    },
    onGotPointerCapture: {
      defaultValue: null,
      description: '',
      name: 'onGotPointerCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'PointerEventHandler<HTMLTableElement>',
      },
    },
    onGotPointerCaptureCapture: {
      defaultValue: null,
      description: '',
      name: 'onGotPointerCaptureCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'PointerEventHandler<HTMLTableElement>',
      },
    },
    onLostPointerCapture: {
      defaultValue: null,
      description: '',
      name: 'onLostPointerCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'PointerEventHandler<HTMLTableElement>',
      },
    },
    onLostPointerCaptureCapture: {
      defaultValue: null,
      description: '',
      name: 'onLostPointerCaptureCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'PointerEventHandler<HTMLTableElement>',
      },
    },
    onScroll: {
      defaultValue: null,
      description: '',
      name: 'onScroll',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'UIEventHandler<HTMLTableElement>',
      },
    },
    onScrollCapture: {
      defaultValue: null,
      description: '',
      name: 'onScrollCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'UIEventHandler<HTMLTableElement>',
      },
    },
    onWheel: {
      defaultValue: null,
      description: '',
      name: 'onWheel',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'WheelEventHandler<HTMLTableElement>',
      },
    },
    onWheelCapture: {
      defaultValue: null,
      description: '',
      name: 'onWheelCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'WheelEventHandler<HTMLTableElement>',
      },
    },
    onAnimationStart: {
      defaultValue: null,
      description: '',
      name: 'onAnimationStart',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'AnimationEventHandler<HTMLTableElement>',
      },
    },
    onAnimationStartCapture: {
      defaultValue: null,
      description: '',
      name: 'onAnimationStartCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'AnimationEventHandler<HTMLTableElement>',
      },
    },
    onAnimationEnd: {
      defaultValue: null,
      description: '',
      name: 'onAnimationEnd',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'AnimationEventHandler<HTMLTableElement>',
      },
    },
    onAnimationEndCapture: {
      defaultValue: null,
      description: '',
      name: 'onAnimationEndCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'AnimationEventHandler<HTMLTableElement>',
      },
    },
    onAnimationIteration: {
      defaultValue: null,
      description: '',
      name: 'onAnimationIteration',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'AnimationEventHandler<HTMLTableElement>',
      },
    },
    onAnimationIterationCapture: {
      defaultValue: null,
      description: '',
      name: 'onAnimationIterationCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'AnimationEventHandler<HTMLTableElement>',
      },
    },
    onTransitionEnd: {
      defaultValue: null,
      description: '',
      name: 'onTransitionEnd',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'TransitionEventHandler<HTMLTableElement>',
      },
    },
    onTransitionEndCapture: {
      defaultValue: null,
      description: '',
      name: 'onTransitionEndCapture',
      parent: {
        fileName: 'arbutus/node_modules/@types/react/index.d.ts',
        name: 'DOMAttributes',
      },
      declarations: [
        {
          fileName: 'arbutus/node_modules/@types/react/index.d.ts',
          name: 'DOMAttributes',
        },
      ],
      required: false,
      type: {
        name: 'TransitionEventHandler<HTMLTableElement>',
      },
    },
  },
};

export default propsDoc;
